profiles {


// aws dev environment at Seqera
// assumes AWS credentials already in shell env
seqera {
  // the standard profile originally is the Acacia setup at Pawsey
  env.DO = 'nothing'
}

towerfusion {
  fusion {
    enabled = true
    exportStorageCredentials = true
  }
  wave.enabled = true
  docker.nabled = true
  process.container = 'ubuntu:22.04'
  process.cpus = 1
}
stagefusion {
  // requires nf v22.10.0 or later
  // best practice is to set bucket policy (see docs)
  aws {
    accessKey = secrets.aws_access_key_id
    secretKey = secrets.aws_secret_access_key
  }
  fusion {
    enabled = true
    exportStorageCredentials = true
  }
  wave {
      enabled = true
      endpoint = "https://wave.stage-tower.net"
  }
  tower {
    accessToken = secrets.tower_access_token_stage
    endpoint = "https://api.stage-tower.net"
    // workspaceId = "$TOWER_WORKSPACE_ID"
  }
  docker {
    enabled = true
  }
  process.container = 'ubuntu:22.04'
}
testfusion {
  // ALWAYS NEED FUSION in this pipeline
  // because ubuntu image has no AWS CLI
  //
  // requires nf v22.10.0 or later
  // best practice is to set bucket policy (see docs)
  aws {
    accessKey = secrets.aws_access_key_id
    secretKey = secrets.aws_secret_access_key
  }
  fusion {
    enabled = true
    exportStorageCredentials = true
  }
  wave.enabled = true
  docker.nabled = true
  process.container = 'ubuntu:22.04'
}
awsbatch {
  process {
    cpus = 1
    executor = 'awsbatch'
    queue = 'nextflow-ci'
    container = 'ubuntu:22.04'
  }
  // this image does not have it
  //aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
}

// nextflow prior to v22.12.0-edge requires AWS_PROFILE env var for alt profiles
standard {
  aws {
    client {
      s3PathStyleAccess = true
      endpoint = "https://acacia.pawsey.org.au"
    }
  }
}

// aws.profile requires nf v22.12.0-edge or later
altprofile {
  aws {
    profile = "acacia-pawsey0001"
    client {
      s3PathStyleAccess = true
      endpoint = "https://acacia.pawsey.org.au"
    }
  }
}

fusion {
  aws {
    client {
      s3PathStyleAccess = true
      endpoint = "https://acacia.pawsey.org.au"
    }
  }
  // requires nf v22.10.0 or later
  // in theory needs to set policy
  // in Acacia, not needed for own buckets, e.g.
  // mc policy set-json $(pwd)/acacia-fusion.json acacia-mine/pawsey0001-marco-mytesting
  workDir = 's3://pawsey0001-marco-mytesting'
  fusion {
    enabled = true
  }
  wave {
      enabled = true
  }
  docker {
    enabled = true
    envWhitelist = 'AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY'
  }
  process.container = 'ubuntu:22.04'
}

secrets {
  aws {
    client {
      s3PathStyleAccess = true
      endpoint = "https://acacia.pawsey.org.au"
    }
    accessKey = secrets.aws_mine_key
    secretKey = secrets.aws_mine_secret
  }
}

secrets_altprofile {
  aws {
    client {
      s3PathStyleAccess = true
      endpoint = "https://acacia.pawsey.org.au"
    }
    accessKey = secrets.aws_pawsey0001_key
    secretKey = secrets.aws_pawsey0001_secret
  }
}


}
